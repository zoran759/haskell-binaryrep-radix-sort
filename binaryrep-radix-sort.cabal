-- Initial binaryrep-radix-sort.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                binaryrep-radix-sort

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             1.6.0.25

-- A short (one-line) description of the package.
synopsis:            RadixSort of floats, ints and unsigned, based on their binary representation

-- A longer description of the package.
description:         RadixSort of floats, ints and unsigned, based on their binary representation
                     (Includes QuickCheck test-suite)

-- The license under which the package is released.
license:             BSD3

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Gabriel Riba Faura

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          griba2001@gmail.com

-- A copyright notice.
-- copyright:           

category:            Algorithms

build-type:          Simple

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >= 1.10

Flag Debug
  Description: Enable debug support
  Default:     False

Flag Counters
  Description: Enable digit pass optimization with counters
  Default:     True

Flag Llvm
  Description: Enable llvm compilation
  Default:     False

library
  Default-Language:    Haskell2010
  Exposed-modules:     Data.List.RadixSort.Base

                       Data.List.RadixSort.Internal.Types
                       Data.List.RadixSort.Internal.LSD
                       Data.List.RadixSort.Internal.MSD
                       Data.List.RadixSort.Internal.Common
                       Data.List.RadixSort.Internal.Util
                       Data.List.RadixSort.Internal.RadixRep
                       Data.List.RadixSort.Internal.Counters

  Ghc-Options:         -Wall

  if flag(llvm) && !os(windows)
    Ghc-Options:       -fllvm -O3
  else
    Ghc-Options:       -O3

  if flag(debug)
    cpp-Options: -DDEBUG
    if !os(windows)
      CC-Options: "-DDEBUG"
    else
      CC-Options: "-DNDEBUG"

  if flag(counters)
    cpp-Options: -DCOUNTERS
    if !os(windows)
      CC-Options: "-DCOUNTERS"
    else
      CC-Options: "-DNCOUNTERS"

  Build-depends:       base >= 4.3
                     , array >= 0.4
                     , containers >= 0.4
                     , dlist >= 0.5
                     , vector >= 0.9
                     , parallel >= 1.0

Test-Suite test-binaryrep-radix-sort
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       test
  Ghc-Options:          -Wall -threaded -O3 -rtsopts -with-rtsopts=-N
  Main-Is:              test.hs
  Build-Depends:        base
                      , QuickCheck >= 2.4
                      , random >= 1.0.1
                      , binaryrep-radix-sort

Benchmark bench-binaryrep-radix-sort
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       bench
  Ghc-Options:          -Wall -threaded -O3 -rtsopts -with-rtsopts=-N
  Main-Is:              bench.hs
  Other-modules:        Timed
  Build-Depends:        base
                      , random >= 1.0.1
                      , vector >= 0.9
                      , vector-algorithms
                      , time
                      , binaryrep-radix-sort

  